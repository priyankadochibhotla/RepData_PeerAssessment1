setwd(Desktop/RepData_PeerAssessment1)
setwd(priyankadochibhotla/Desktop/RepData_PeerAssessment1)
setwd(/priyankadochibhotla/Desktop/RepData_PeerAssessment1)
getwd()
setwd("/Users/priyankadochibhotla/Desktop/RepData_PeerAssessment1")
read.csv("activity.csv")
activity <- read.csv(unz("activity.zip", "activity.csv"), header=T, quote="\"", sep=",")
head(activity)
mean(activity$steps)
groupby(activity, date) %>% mean(activity$steps)
```{r global_options, include=FALSE}
library(knitr)
opts_chunk$set(fig.align="center", fig.height=4, fig.width=5)
library(ggplot2)
theme_set(theme_bw(base_size=12))
library(dplyr)
library(tidyr)
library(grid)
```
groupby(activity, date) %>% mean(activity$steps)
group_by(activity, date) %>% mean(activity$steps)
View(activity)
group_by(activity, date) %>% mean(activity$steps, na.rm = TRUE)
mean?
```
?mean
group_by(activity, date) %>% mean(steps, na.rm = TRUE)
group_by(activity, date)
mean(steps, na.rm = TRUE)
%>% mean(steps, na.rm = TRUE)
group_by(activity, date) %>% mean(steps, na.rm = TRUE)
group_by(activity, date) %>% mean(na.rm = TRUE)
group_by(activity, date) %>% mean(steps, na.rm = TRUE)
?tapply
tapply(activity$steps, activity$date, mean, na.rm = T)
sum(mean_steps_per_day)
mean_steps_per_day <- tapply(activity$steps, activity$date, mean, na.rm = T)
sum(mean_steps_per_day)
sum(mean_steps_per_day, na.rm = T)
totalsteps <- sum(activity$steps, na.rm = T)
totalsteps <- sum(activity$steps, na.rm = T)
mean(totalsteps)
tapply(activity$steps, activity$date, sum)
mean(tapply(activity$steps, activity$date, sum), na.rm = TRUE)
total_steps_per_day <- tapply(activity$steps, activity$date, sum)
mean_steps_per_day <- mean(total_steps_per_day, na.rm = TRUE)
median_steps_per_day <- median(total_steps_per_day, na.rm = TRUE)
hist(total_steps_per_day)
hist(total_steps_per_day, xlab = "Number of steps per day", ylab = "Frequency", main = "Frequency of steps")
hist(total_steps_per_day, xlab = "Number of steps per day", ylab = "Frequency", main = "Frequency of steps", col = "red")
hist(total_steps_per_day, xlab = "Number of steps per day", ylab = "Frequency", main = "Frequency of steps", col = "red", breaks = 10)
hist(total_steps_per_day, xlab = "Total number of steps per day", ylab = "Frequency", main = "Frequency of steps", col = "red", breaks = 10)
average_steps_per_day <- tapply(activity$steps, activity$date, mean, na.rm = TRUE)
plot(average_steps_per_day, type = "line", xlab = "Interval", ylab = "Average number of steps")
average_steps_per_day <- tapply(activity$steps, activity$interval, mean, na.rm = TRUE)
plot(average_steps_per_day, type = "line", xlab = "Interval", ylab = "Average number of steps")
max(average_steps_per_day)
plot(average_steps_per_day, type = "l", xlab = "Interval", ylab = "Average number of steps")
# Which 5-minute interval, on average across all the days in the dataset, contains the maximum number of steps?
max(average_steps_per_day)
average_steps_per_day[which.max(average_steps_per_day$steps), ]
mean_steps_per_interval[which.max(mean_steps_per_interval$steps), ]
mean_steps_per_interval <- tapply(activity$steps, activity$interval, mean, na.rm = TRUE)
plot(mean_steps_per_interval, type = "l", xlab = "Interval", ylab = "Average number of steps")
# Which 5-minute interval, on average across all the days in the dataset, contains the maximum number of steps?
mean_steps_per_interval[which.max(mean_steps_per_interval$steps), ]
which.max(mean_steps_per_interval$steps)
mean_steps_per_interval$steps
mean_steps_per_interval
total_steps_per_day <- aggregate(steps ~ date, data = activity, sum, na.rm = TRUE)
View(total_steps_per_day)
hist(total_steps_per_day, xlab = "Total number of steps per day", ylab = "Frequency", main = "Frequency of steps", col = "red", breaks = 10)
hist(total_steps_per_day$steps, xlab = "Total number of steps per day", ylab = "Frequency", main = "Frequency of steps", col = "red", breaks = 10)
mean_steps_per_day <- mean(total_steps_per_day)
mean_steps_per_day <- mean(total_steps_per_day$steps)
median_steps_per_day <- median(total_steps_per_day$steps)
median_steps_per_day <- median(total_steps_per_day$steps) + 8
median_steps_per_day <- median(total_steps_per_day$steps)
?aggregate
mean_steps_per_interval <- aggregate(steps ~ interval, data = activity, mean, na.rm = TRUE)
plot(mean_steps_per_interval, type = "l", xlab = "Interval", ylab = "Average number of steps")
which.max(mean_steps_per_interval$steps)
mean_steps_per_interval[which.max(mean_steps_per_interval$steps), ]
plot(mean_steps_per_interval, type = "l", xlab = "Interval", ylab = "Average number of steps", main = "Average steps vs. Interval")
plot(mean_steps_per_interval, type = "l", xlab = "Interval", ylab = "Average number of steps", main = "Average Steps vs. Interval")
# Which 5-minute interval, on average across all the days in the dataset, contains the maximum number of steps?
hist(total_steps_per_day$steps, xlab = "Total number of steps per day", ylab = "Frequency", main = "Frequency of steps", col = "red", breaks = 10)
hist(total_steps_per_day$steps, xlab = "Total number of steps per day", ylab = "Frequency", main = "Frequency of Steps", col = "red", breaks = 10)
hist(total_steps_per_day$steps, xlab = "Total number of steps per day", ylab = "Frequency", main = "Frequency of Steps", col = "red", breaks = 10)
plot(mean_steps_per_interval, type = "l", xlab = "Interval", ylab = "Average number of steps", main = "Average Steps vs. Interval")
is.na(activity)
activity[which.is.na(activity), ]
activity[which.is.na(activity$steps), ]
activity[which.(is.na)(activity$steps), ]
activity[is.na(activity$steps), ]
total_NAs <- nrows(activity[is.na(activity$steps), ])
total_NAs <- nrow(activity[is.na(activity$steps), ])
is.na(activity$steps)
mean_steps_per_day <- mean(total_steps_per_day$steps)
daily_mean <- aggregate(steps ~ date, data = activity, mean, na.rm = TRUE)
View(daily_mean)
daily_mean <- aggregate(steps ~ date, data = activity, mean)
View(daily_mean)
daily_mean <- aggregate(steps ~ date, data = activity, mean, na.rm = FALSE)
View(daily_mean)
daily_mean <- aggregate(steps ~ date, data = activity, mean)
if (is.na(activity$steps)){
activity$steps = daily_mean$steps
}
daily_mean <- aggregate(steps ~ date, data = activity, mean)
if (!is.na(activity$steps)){
data = activity$steps
}
fill_value <- function(steps, date) {
new_dataset <- NA
if (!is.na(steps))
new_dataset <- c(steps)
else
new_dataset <- (daily_mean[daily_mean$date == date, "steps"])
return(new_dataset)
}
new_dataset <- mapply(fill_value, activity$steps, activity$date)
new_dataset <- c(steps)
fill_value <- function(steps, date) {
filled <- NA
if (!is.na(steps))
filled <- c(steps) else filled <- (daily_mean[daily_mean$date == date, "steps"])
return(filled)
}
filled.data <- activity
filled.data$steps <- mapply(fill_value, filled.data$steps, filled.data$interval)
View(filled.data)
filled.data$steps <- tapply(fill_value, filled.data$steps, filled.data$date)
filled.data$steps <- mapply(fill_value, filled.data$steps, filled.data$date)
daily_mean <- aggregate(steps ~ date, data = activity, mean)
fill_value <- function(steps, date) {
filled <- NA
if (!is.na(steps))
filled <- c(steps)
else
filled <- (daily_mean[daily_mean$date == date, "steps"])
return(filled)
}
filled.data <- activity
filled.data$steps <- mapply(fill_value, filled.data$steps, filled.data$date)
View(filled.data)
fill_value <- function(steps, date) {
filled <- NA
if (!is.na(steps))
filled <- c(steps)
else
filled <- (daily_mean[daily_mean$date == date, "steps"])
return(filled)
}
new_dataset <- activity
new_dataset$steps <- mapply(fill_value, new_dataset$steps, new_dataset$date)
View(new_dataset)
mean_steps_per_interval <- aggregate(steps ~ interval, data = activity, mean, na.rm = TRUE)
activity <- read.csv(unz("activity.zip", "activity.csv"), header=T, quote="\"", sep=",")
mean_steps_per_interval <- aggregate(steps ~ interval, data = activity, mean, na.rm = TRUE)
View(mean_steps_per_interval)
fill_value <- function(steps, interval) {
filled <- NA
if (!is.na(steps))
filled <- c(steps)
else
filled <- (mean_steps_per_interval[mean_steps_per_interval$interval == interval, "steps"])
return(filled)
}
new_dataset <- activity
new_dataset$steps <- mapply(fill_value, new_dataset$steps, new_dataset$interval)
View(new_dataset)
total.steps <- tapply(new_dataset$steps, new_dataset$date, sum)
qplot(total.steps, binwidth = 1000, xlab = "total number of steps taken each day")
hist(new_total_steps$steps, col = "red")
new_total_steps <- tapply(new_dataset$steps, new_dataset$date, sum)
hist(new_total_steps$steps, col = "red")
hist(new_total_steps, col = "red")
hist(new_total_steps, xlab = "Total number of steps per day", ylab = Frequency, main = "Frequency of Steps" col = "red", breaks = 10)
hist(new_total_steps, xlab = "Total number of steps per day", ylab = "Frequency", main = "Frequency of Steps" col = "red", breaks = 10)
hist(new_total_steps, xlab = "Total number of steps per day", ylab = "Frequency", main = "Frequency of Steps", col = "red", breaks = 10)
mean_steps_per_day <- mean(new_total_steps)
median_steps_per_day <- median(new_total_steps)
fill <- function(steps, interval){
if (is.na(activityFilled$steps))
activityFilled$steps <- mean_steps_per_interval(activityFilled$interval)
}
activityFilled <- activity
fill <- function(steps, interval){
if (is.na(steps))
steps <- mean_steps_per_interval(interval)
}
activityFilled$steps <- mapply(fill, activityFilled$steps, activityFilled$interval)
activityFilled <- activity
fill <- function(steps, interval){
if (is.na(steps))
steps <- mean_steps_per_interval[mean_steps_per_interval$interval == interval, "steps"]
}
activityFilled$steps <- mapply(fill, activityFilled$steps, activityFilled$interval)
View(activityFilled)
View(new_dataset)
new_total_steps <- tapply(activityFilled$steps, activityFilled$date, sum)
new_total_steps <- aggregate(steps ~ date, data = activityFilled, sum, na.rm = TRUE)
View(activityFilled)
new_total_steps <- aggregate(steps ~ date, data = activityFilled, sum, na.rm = TRUE)
new_total_steps <- aggregate(steps ~ date, data = activityFilled, sum, na.rm = TRUE)
new_total_steps <- aggregate(steps ~ date, data = activity, sum, na.rm = TRUE)
View(activityFilled)
View(mean_steps_per_interval)
steps <- mean_steps_per_interval[mean_steps_per_interval$interval == interval, "steps"]
activityFilled <- activity
fill <- function(steps, interval){
if (is.na(steps))
steps <- mean_steps_per_interval[mean_steps_per_interval$interval == interval, "steps"]
}
activityFilled$steps <- mapply(fill, activityFilled$steps, activityFilled$interval)
View(activityFilled)
?mapply
mean_steps_per_interval[mean_steps_per_interval$interval == activityFilled$interval, "steps"]
fill <- function(steps, interval){
if (is.na(steps))
steps <- mean_steps_per_interval[mean_steps_per_interval$interval == interval, "steps"]
return steps
return (steps)
activityFilled[4, ]$interval
mean_steps_per_interval$(activityFilled[1, ]$interval)
mean_steps_per_interval$(activityFilled[1, ]$interval)
activityFilled[i, ]$steps <- mean_steps_per_interval[mean_steps_per_interval$currentInterval, "steps"]
for (i in 1:nrow(activityFilled)) {
currentInterval = activityFilled[i, ]$interval
if (is.na(activityFilled[i, ]$steps)) {
activityFilled[i, ]$steps <- mean_steps_per_interval[mean_steps_per_interval$currentInterval, "steps"]
}
}
View(activityFilled)
activityFilled <- activity  # Make a new dataset with the original data
View(activityFilled)
for (i in 1:nrow(activityFilled)) {
currentInterval = activityFilled[i, ]$interval
if (is.na(activityFilled[i, ]$steps)) {
activityFilled[i, ]$steps <- mean_steps_per_interval[mean_steps_per_interval$currentInterval, ]$steps
}
}
mean_steps_per_interval[mean_steps_per_interval$currentInterval, ]$steps
for (i in 1:nrow(activityFilled)) {
if (is.na(activityFilled[i, ]$steps)) {
currentInterval = activityFilled[i, ]$interval
activityFilled[i, ]$steps <- mean_steps_per_interval[mean_steps_per_interval$currentInterval, ]$steps
}
}
for (i in 1:nrow(activityFilled)) {
if (is.na(activityFilled[i, ]$steps)) {
activityFilled[i, ]$steps <- mean_steps_per_interval[mean_steps_per_interval$interval == activityFilled[i, ]interval, ]$steps
}
}
for (i in 1:nrow(activityFilled)) {
if (is.na(activityFilled[i, ]$steps))
activityFilled[i, ]$steps <- mean_steps_per_interval[mean_steps_per_interval$interval == activityFilled[i, ]interval, ]$steps
for (i in 1:nrow(activityFilled)) {
if (is.na(activityFilled[i, ]$steps))
activityFilled[i, ]$steps <- mean_steps_per_interval[mean_steps_per_interval$interval == activityFilled[i, ]interval, ]$steps
}
for (i in 1:nrow(activityFilled)) {
if (is.na(activityFilled[i, ]$steps))
activityFilled[i, ]$steps <- mean_steps_per_interval[mean_steps_per_interval$interval == activityFilled[i, ]interval, ]$steps
for (i in 1:nrow(activityFilled)) {
if (is.na(activityFilled[i, ]$steps)) {
activityFilled[i, ]$steps <- mean_steps_per_interval[mean_steps_per_interval$interval == activityFilled[i, ]$interval, ]$steps
}
}
View(activityFilled)
activityFilled <- activity
for (i in 1:nrow(activityFilled)) {
if (is.na(activityFilled[i, ]$steps)) {
activityFilled[i, ]$steps <- mean_steps_per_interval[mean_steps_per_interval$interval ==
activityFilled[i, ]$interval, ]$steps
}
}
new_total_steps <- aggregate(steps ~ date, data = activityFilled, sum, na.rm = TRUE)
View(new_total_steps)
hist(new_total_steps$steps, xlab = "Total number of steps per day", ylab = "Frequency", main = "Frequency of Steps", col = "red", breaks = 10)
new_mean_steps_per_day <- mean(new_total_steps$steps)
new_median_steps_per_day <- median(new_total_steps$steps)
# calculate the total number of steps taken per day
total_steps_per_day <- aggregate(steps ~ date, data = activity, sum, na.rm = TRUE)
# make a histogram of the total number of steps taken each day
hist(total_steps_per_day$steps, xlab = "Total number of steps per day", ylab = "Frequency", main = "Frequency of Steps", col = "red", breaks = 10)
# calculate and report the mean and median of the total number of steps taken per day
mean_steps_per_day <- mean(total_steps_per_day$steps)
median_steps_per_day <- median(total_steps_per_day$steps)
type_of_day <- function(date) {
day <- weekdays(date)
if (day %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))
return("weekday")
else if (day %in% c("Saturday", "Sunday"))
return("weekend")
}
activityFilled$day <- sapply(as.Date(activityFilled$date), type_of_day)
View(activityFilled)
View(activityFilled)
mean_steps_per_weekday <- tapply(activityFilled$steps, list(activityFilled$interval, activityFilled$day), mean, na.rm = TRUE)
mean_steps_per_weekday <- tapply(activityFilled$steps, activityFilled$interval, activityFilled$day, mean, na.rm = TRUE)
mean_steps_per_weekday <- aggregate(steps ~ day, data = activityFilled, mean, na.rm = TRUE)
View(mean_steps_per_weekday)
mean_steps_per_weekday <- aggregate(steps ~ day + interval, data = activityFilled, mean, na.rm = TRUE)
View(mean_steps_per_interval)
par(mfrow = c(2,2))
plot(mean_steps_per_weekday$interval, mean_steps_per_weekday$steps, ylab = "Interval", type = 'l')
plot(mean_steps_per_weekday$interval, mean_steps_per_weekday$steps, xlab = "Interval", ylab = "Number of Steps", type = 'l')
par(mfrow = c(2,1))
plot(mean_steps_per_weekday$interval, mean_steps_per_weekday$steps, ylab = "Interval", type = 'l')
plot(mean_steps_per_weekday$interval, mean_steps_per_weekday$steps, xlab = "Interval", ylab = "Number of Steps", type = 'l')
par(mfrow = c(2,1))
par(mai = c(0, 1, 1, 0))
plot(mean_steps_per_weekday$interval, mean_steps_per_weekday$steps, ylab = "Interval", type = 'l')
par(mai = c(1, 1, 0, 0))
plot(mean_steps_per_weekday$interval, mean_steps_per_weekday$steps, xlab = "Interval", ylab = "Number of Steps", type = 'l')
par(mai = c(0, 1, 1, 0))
plot(mean_steps_per_weekday$interval, mean_steps_per_weekday$steps, ylab = "Interval", type = 'l')
par(mai = c(1, 1, 0, 0))
plot(mean_steps_per_weekday$interval, mean_steps_per_weekday$steps, xlab = "Interval", ylab = "Number of Steps", type = 'l')
plot(mean_steps_per_weekday[, 1], mean_steps_per_weekday$steps, ylab = "Interval", type = 'l')
par(mfrow = c(2,1))
par(mai = c(0, 1, 1, 0))
plot(mean_steps_per_weekday[, 1], mean_steps_per_weekday$steps, ylab = "Interval", type = 'l')
par(mai = c(1, 1, 0, 0))
plot(mean_steps_per_weekday[, 2], mean_steps_per_weekday$steps, xlab = "Interval", ylab = "Number of Steps", type = 'l')
lines(data$Datetime, data$Sub_metering_2, col = 'red')
par(mai = c(0, 1, 1, 0))
plot(mean_steps_per_weekday[, 1], mean_steps_per_weekday$steps, ylab = "Interval", type = 'l')
plot(mean_steps_per_weekday[, 2], mean_steps_per_weekday$steps, xlab = "Interval", ylab = "Number of Steps", type = 'l')
plot(mean_steps_per_weekday[, 1], mean_steps_per_weekday$steps, ylab = "Interval", type = 'l')
par(mai = c(1, 1, 0, 0))
plot(mean_steps_per_weekday[, 2], mean_steps_per_weekday$steps, xlab = "Interval", ylab = "Number of Steps", type = 'l')
xlab("5-minute interval") + ylab("Number of steps")
ggplot(mean_steps_per_weekday, aes(interval, steps)) + geom_line() + facet_grid(day ~ .) +
xlab("5-minute interval") + ylab("Number of steps")
ggplot(mean_steps_per_weekday, aes(interval, steps)) + geom_line() + facet_grid(day ~ .) +
xlab("Interval") + ylab("Average number of steps")
ggplot(mean_steps_per_weekday, aes(interval, steps)) + geom_line(col = "blue") + facet_grid(day ~ .) +
xlab("Interval") + ylab("Average number of steps")
ggplot(mean_steps_per_weekday, aes(interval, steps)) + geom_line(col = "lightblue") + facet_grid(day ~ .) +
xlab("Interval") + ylab("Average number of steps")
ggplot(mean_steps_per_weekday, aes(interval, steps)) + geom_line(col = "lightblue") + facet_grid(day ~ ., fill = "orange") +
xlab("Interval") + ylab("Average number of steps")
ggplot(mean_steps_per_weekday, aes(interval, steps)) + geom_line(col = "lightblue") + facet_grid(day ~ ., fill = "orange") +
xlab("Interval") + ylab("Average number of steps")
ggplot(mean_steps_per_weekday, aes(interval, steps)) + geom_line(col = "lightblue") + facet_grid(day ~ ., col = "orange") +
xlab("Interval") + ylab("Average number of steps")
ggplot(mean_steps_per_weekday, aes(interval, steps)) + geom_line(col = "lightblue") + facet_grid(day ~ ., col = "orange") +  theme(plot.background=element_rect(fill="orange"))
xlab("Interval") + ylab("Average number of steps")
ggplot(mean_steps_per_weekday, aes(interval, steps)) + geom_line(col = "lightblue") + facet_grid(day ~ ., col = "orange") +  theme(plot.background=element_rect(fill="orange"))
xlab("Interval") + ylab("Average number of steps")
ggplot(mean_steps_per_weekday, aes(interval, steps)) + geom_line(col = "lightblue") + facet_grid(day ~ .) +  theme(plot.background=element_rect(fill="orange"))
xlab("Interval") + ylab("Average number of steps")
ggplot(mean_steps_per_weekday, aes(interval, steps)) + geom_line(col = "lightblue") + facet_grid(day ~ .) + xlab("Interval") + ylab("Average number of steps")
```
activity <- read.csv(unz("activity.zip", "activity.csv"), header=T, quote="\"", sep=",")
total_steps_per_day <- aggregate(steps ~ date, data = activity, sum, na.rm = TRUE)
mean_steps_per_day <- mean(total_steps_per_day$steps)
median_steps_per_day <- median(total_steps_per_day$steps)
total_NAs <- nrow(activity[is.na(activity$steps), ])
mean_steps_per_interval[which.max(mean_steps_per_interval$steps), ]
nrow(activity[is.na(activity$steps), ])
```{r global_options, include=FALSE}
library(knitr)
opts_chunk$set(fig.align="center", fig.height=4, fig.width=5)
library(ggplot2)
theme_set(theme_bw(base_size=12))
library(dplyr)
library(tidyr)
library(grid)
```
# Set working directory
setwd("/Users/priyankadochibhotla/Desktop/RepData_PeerAssessment1")
# Load the data
activity <- read.csv(unz("activity.zip", "activity.csv"), header=T, quote="\"", sep=",")
head(activity)
total_steps_per_day <- aggregate(steps ~ date, data = activity, sum, na.rm = TRUE)
head(total_steps_per_day)
hist(total_steps_per_day$steps, xlab = "Total number of steps per day", ylab = "Frequency", main = "Frequency of Steps", col = "red", breaks = 10)
mean(total_steps_per_day$steps)
median(total_steps_per_day$steps)
mean_steps_per_interval <- aggregate(steps ~ interval, data = activity, mean, na.rm = TRUE)
plot(mean_steps_per_interval, type = "l", xlab = "Interval", ylab = "Average number of steps", main = "Average Steps vs. Interval")
mean_steps_per_interval[which.max(mean_steps_per_interval$steps), ]
nrow(activity[is.na(activity$steps), ])
activityFilled <- activity
for (i in 1:nrow(activityFilled)) {
if (is.na(activityFilled[i, ]$steps)) {
activityFilled[i, ]$steps <- mean_steps_per_interval[mean_steps_per_interval$interval ==
activityFilled[i, ]$interval, ]$steps
}
}
head(activityFilled)
new_total_steps <- aggregate(steps ~ date, data = activityFilled, sum, na.rm = TRUE)
hist(new_total_steps$steps, xlab = "Total number of steps per day", ylab = "Frequency", main = "Frequency of Steps", col = "red", breaks = 10)
mean(new_total_steps$steps)
median(new_total_steps$steps)
type_of_day <- function(date) {
day <- weekdays(date)
if (day %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))
return("weekday")
else if (day %in% c("Saturday", "Sunday"))
return("weekend")
}
activityFilled$day <- sapply(as.Date(activityFilled$date), type_of_day)
head(activityFilled)
mean_steps_per_weekday <- aggregate(steps ~ day + interval, data = activityFilled, mean, na.rm = TRUE)
ggplot(mean_steps_per_weekday, aes(interval, steps)) + geom_line(col = "lightblue") + facet_grid(day ~ .) + xlab("Interval") + ylab("Average number of steps")
